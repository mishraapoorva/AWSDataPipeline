AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Sources csv and json to s3. An AWS Serverless Specification template describing your function. An AWS Serverless Specification template describing your function.

Parameters:
  SourceBucketName:
    Type: String 

Resources:
  SourcingScript:
    Type: 'AWS::Serverless::Function'
    DependsOn:
      - SourceBucket
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      CodeUri: s3://rearc-lambda-scripts/sourcingScript.zip
      Description: Sources csv and json to s3
      MemorySize: 128
      Timeout: 60
      Role: 'arn:aws:iam::372721562372:role/service-role/sourcingScript-role-zm3n8l3i'
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /sourcingScript
            Method: ANY

  AnalyticsLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.7
      CodeUri: s3://rearc-lambda-scripts/analyticsLambda.zip
      Description: ''
      MemorySize: 509
      Timeout: 30
      Role: 'arn:aws:iam::372721562372:role/service-role/analyticsLambda-role-xmr8l0k6'
      Layers:
        - 'arn:aws:lambda:us-east-1:372721562372:layer:pandas:2'

  AnalyticsLambdaEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    DependsOn: AnalyticsLambda  
    Properties: 
      BatchSize: 1
      Enabled: true
      EventSourceArn: !GetAtt StandardQueue.Arn
      FunctionName: !GetAtt AnalyticsLambda.Arn
  
  SourceBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    DependsOn:
      - QueuePolicy
    Properties:
      BucketName: !Ref SourceBucketName
      NotificationConfiguration:
        QueueConfigurations:
          - Event: 's3:ObjectCreated:*'
            Queue: !GetAtt StandardQueue.Arn

  QueuePolicy:
    Type: 'AWS::SQS::QueuePolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: 
              Service: "s3.amazonaws.com"
            Action:
              - 'SQS:SendMessage'
            Resource: !GetAtt StandardQueue.Arn
            Condition:
              ArnLike:
                aws:SourceArn: !Join ["",['arn:aws:s3:::',!Ref SourceBucketName]]
              StringEquals:
                aws:SourceAccount: !Ref AWS::AccountId
      Queues:
        - !Ref StandardQueue

  StandardQueue:
    Type: AWS::SQS::Queue